{"version":3,"sources":["redux/selector.js","redux/actionTypes.js","controllers/audioPlayer.js","controllers/playAudio.js","components/AudioFilesList.js","redux/actions.js","svgButtonDesign/folder-open.svg","controllers/fileInputeLoader.js","components/FileOpenHandler.js","svgButtonDesign/playButton.svg","svgButtonDesign/pauseButton.svg","components/PlayButton.js","svgButtonDesign/previousButton.svg","components/index.js","components/PreviousAndNextButton.js","App.js","redux/reducers/fileInput.js","redux/reducers/audioList.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["getCLickedItem","store","audioList","currectClicked","ADD_FILES","DELETE_FILES","CLICKED","audioPlayer","this","hawlerInstance","audioPlayId","url","onComplete","onError","sound","Howl","src","autoplay","loop","preload","volume","format","onloaderror","console","error","onplayerror","onplay","info","onend","onmute","id","once","log","play","onAudioEnd","stop","pause","audioFile","Promise","reject","resolve","catch","window","connect","state","currentClickedItem","props","list","fileName","index","onListClick","updateClickedAudioItem","getFileList","files","map","bindedCallback","bind","className","onClick","fileInput","loadedFile","content","type","payload","data","dataList","fileNamesData","loadThisFile","fileData","fileReader","FileReader","addEventListener","fileReadData","result","push","name","readyState","readAsDataURL","inputTarget","a","promiseArr","i","length","file","item","all","loadedFiles","loadFile","FileOpenHandler","fileDialogueRef","React","createRef","onButtonClickHandler","onButtonClick","getSelectedFilesBinded","getSelectedFiles","filesAdded","current","click","target","fileLoader","addFiles","ref","style","display","folderOpenIcon","onChange","event","currentTarget","value","multiple","accept","Component","PlayButton","toggle","handleButtonClick","clickedOnButton","setState","audioId","button","playButton","alt","pauseButton","components","AudioFilesList","PreviousAndNextButton","previousButton","transform","fetch","cache","then","App","initialState","isFilesLoaded","combineReducers","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.735f532c.chunk.js","sourcesContent":["export const loadedFile = store => store.fileInput.files;\n\nexport const getCLickedItem = store => store.audioList.currectClicked;","export const ADD_FILES = 'ADD_FILES';\nexport const DELETE_FILES = 'DELETE_FILES';\nexport const UPDATE_CURRENT_AUDIO = 'UPDATE_CURRENT_AUDIO';\nexport const CLICKED = 'CLICKED';\n","import { Howl } from 'howler';\n\nclass AudioPlayer {\n  constructor() {\n    this.hawlerInstance = [];\n    this.audioPlayId = {};\n  }\n\n  play(url, onComplete, onError) {\n    const sound = new Howl({\n      src: url,\n      autoplay: false,\n      loop: false,\n      preload: true,\n      volume: 1,\n      format: 'mp4',\n      onloaderror: () => {\n        console.error('Audio file is not loaded');\n        onError();\n      },\n      onplayerror: () => {\n        console.error('On play error');\n        onError();\n      },\n      onplay: () => {\n        console.info('Audio started playing');\n      },\n      onend: () => {\n        console.info('Audio playing completed');\n        onComplete();\n      },\n      onmute: () => {\n        console.info('Muted');\n      }\n    });\n    let id = { id: null };\n    sound.once('load', () => {\n      console.log('here');\n      id.id = sound.play();\n      this.audioPlayId[id.id] = sound;\n    });\n    sound.once('end', () => { this.onAudioEnd(id) });\n    return id;// user need to save if he wants to stop it.\n  }\n\n  // Once completed no need aobject ref\n  onAudioEnd(id) {\n    console.log('IN onAudioEnd,,,,,deleting ID');\n    delete this.audioPlayId[id];\n  }\n\n  // should send id to stop needed audio\n  stop(id) {\n    this.audioPlayId[id].stop(id);\n  }\n\n  stopAll() {\n    // Need to work on it.\n  }\n\n  pause(id) {\n    this.audioPlayId[id].pause();\n  }\n\n  resume(id) {\n    this.audioPlayId[id].play();\n  }\n}\n\n const audioPlayer = new AudioPlayer();\n export default audioPlayer;\nwindow.audioPlayer = audioPlayer;\n","import { connect } from \"react-redux\";\nimport { getCLickedItem } from '../redux/selector';\nimport audioPlayer from './audioPlayer'\n\nexport async function playAudios(audioFilesList) {\n    for (let index = 0; index < audioFilesList.length; index++) {\n        const file = audioFilesList[index];\n        await play(file);\n    }\n};\n\nexport function play(audioFile) {\n    return new Promise((reject, resolve) => {\n        audioPlayer.play(audioFile, reject, resolve);\n    }).catch(error => {\n        console.log('Got error', error);\n    });\n}\n\nfunction getAudioRealtedData(props) {\n    console.log(props);\n    return (<></>);\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        currentClickedItem: getCLickedItem(state),\n    }\n\n}\n\nexport default connect(mapStateToProps)(getAudioRealtedData);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { loadedFile } from '../redux/selector';\nimport { updateClickedAudioItem } from '../redux/actions'\nimport AudioUpdater,{ play } from '../controllers/playAudio'\nimport './style.css'\n\nconst list = [\n  { fileName: 'first audio', index: 1 },\n  { fileName: 'first audio', index: 2 },\n  { fileName: 'first audio', index: 3 },\n  { fileName: 'first audio', index: 4 },\n  { fileName: 'first audio', index: 5 },\n  { fileName: 'first audio', index: 6 },\n]\n\nfunction onListClick(index) {\n  console.log(this);\n  this.updateClickedAudioItem(index);\n  console.log(play);\n  // play(window.loadedFile[0])\n}\n\nfunction getFileList({ props,files}) {\n  console.log(files,props);\n  return files.map(({ fileName, index }) => {\n    console.log(this);\n    const bindedCallback = onListClick.bind(props, index);\n    return (\n      <li className='List' key={index} onClick={bindedCallback}>\n        {fileName}\n      </li>\n    );\n  })\n}\n\nfunction audioNameList(props) {\n  // console.log(audioUpdater);\n  console.log('PROPS', props.updateClickedAudioItem);\n  const data = {\n    props,\n    files: props.files\n  };\n  const dataList = {\n    props,\n    files: list\n  }\n  return (\n    <div className='myBox'>\n      <AudioUpdater />\n      <ol>\n        {getFileList(props.files ? data : dataList)}\n      </ol>\n    </div>\n  );\n}\n\nconst mapStateToProps = function (state) {\n  const files = loadedFile(state);\n  return { files };\n}\n\nexport default connect(mapStateToProps,{updateClickedAudioItem})(audioNameList);","import { ADD_FILES, DELETE_FILES,CLICKED } from './actionTypes';\n\nexport function addFiles(content) {\n    console.log(content);\n    return {\n        type: ADD_FILES,\n        payload: {\n            files:content\n        }\n    }\n}\n\nexport function deleteFiles(content) {\n    return {\n        type: DELETE_FILES,\n        payload: content\n    }\n}\n\nexport function updateClickedAudioItem(content){\n    console.log(content);\n    return {\n        type:CLICKED,\n        payload:content\n    }\n}","export default __webpack_public_path__ + \"static/media/folder-open.610cbfaa.svg\";","let fileNamesData = [];\nfunction loadThisFile(fileData, index) {\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('load', () => {\n            const fileReadData = fileReader.result;\n            fileNamesData.push({\n                fileName: fileData.name,\n                index,\n            })\n            resolve(fileReadData);\n        });\n        fileReader.addEventListener('error', () => {\n            reject(`Something error in file loading :: STATE: ${fileReader.readyState}`);\n        });\n        fileReader.readAsDataURL(fileData);\n    });\n}\n\nasync function loadFile(inputTarget) {\n    let promiseArr = [];\n    for (let i = 0; i < inputTarget.files.length; i++) {\n        const file = inputTarget.files.item(i);\n        promiseArr.push(loadThisFile(file, i));\n    }\n    const loadedFiles = await Promise.all(promiseArr);\n    window.loadedFiles = loadedFiles;\n    return { loadedFiles, fileData: fileNamesData };\n}\n\nexport default loadFile;","import React from 'react';\nimport { connect } from 'react-redux'\n// import { audioPlayer } from '../controllers/audioPlayer'\nimport folderOpenIcon from '../svgButtonDesign/folder-open.svg'\nimport { addFiles } from '../redux/actions';\nimport fileLoader from '../controllers/fileInputeLoader'\n\nclass FileOpenHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileDialogueRef = React.createRef();\n    this.onButtonClickHandler = this.onButtonClick.bind(this);\n    this.getSelectedFilesBinded = this.getSelectedFiles.bind(this);\n    this.state = {\n      filesAdded: true,\n      files: null,\n    }\n  }\n\n  onButtonClick() {\n    this.fileDialogueRef.current.click();\n  }\n\n  async getSelectedFiles({ target }) {\n    const { fileData } = await fileLoader(target);\n    this.props.addFiles(fileData);\n\n    console.log('fileLoader component',fileData);\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          type='file'\n          ref={this.fileDialogueRef}\n          style={{ display: \"none\" }}\n          src={folderOpenIcon}\n          onChange={this.getSelectedFilesBinded}\n          onClick={(event) => {\n            event.currentTarget.value = null\n          }}\n          multiple accept='audio/*' />\n        <button onClick={this.onButtonClickHandler}>Open File</button>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { addFiles })(FileOpenHandler);\n","export default __webpack_public_path__ + \"static/media/playButton.c49abbd7.svg\";","export default __webpack_public_path__ + \"static/media/pauseButton.cadf7947.svg\";","import React from 'react';\nimport playButton from '../svgButtonDesign/playButton.svg'\nimport pauseButton from '../svgButtonDesign/pauseButton.svg'\n// import { audioPlayer } from './audioPlayer'\n\nclass PlayButton extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      toggle:false,\n    }\n    this.handleButtonClick = this.clickedOnButton.bind(this);\n  }\n\n  clickedOnButton(){\n    this.setState({ toggle: !this.state.toggle });\n    console.log(this.state.toggle);\n    if(this.state.toggle){\n      // window.audioId.id && audioPlayer.pause(window.audioId.id)\n    }else{\n      if(!window.audioId.id){\n        // window.audioId = audioPlayer.play('https://res.cloudinary.com/djcffe77b/video/upload/v1604324153/a_emeyr3.mp3');\n        return;\n      }\n      // window.audioId.id && audioPlayer.resume(window.audioId.id)\n    }\n  }\n\n  render(){\n    let button = <img src={playButton} alt='pause-button' />;\n    if(this.state.toggle){\n      button = <img src={ pauseButton} alt='play-button' />;\n    }\n    return (\n      <div className='Interaction-button' onClick={this.handleButtonClick} >\n      { button }\n      </div>\n    )\n  }\n}\n\nexport default PlayButton;\n","export default __webpack_public_path__ + \"static/media/previousButton.73c027af.svg\";","import AudioFilesList from './AudioFilesList';\nimport FileOpenHandler from './FileOpenHandler';\nimport PlayButton from './PlayButton';\nimport PreviousAndNextButton from './PreviousAndNextButton';\n\nconst components = {\n    AudioFilesList,\n    FileOpenHandler,\n    PlayButton,\n    PreviousAndNextButton\n}\n\nexport default components;","import React from 'react';\nimport previousButton from '../svgButtonDesign/previousButton.svg'\n\nclass PreviousAndNextButton extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      toggle:true,\n    }\n    this.handleButtonClick = this.clickedOnButton.bind(this);\n  }\n\n  clickedOnButton(){\n    console.log('Clicked',this.props);\n  }\n\n  render(){\n    let button = <img src={previousButton} alt='pause-button' />;\n    if(this.props.type === \"next\"){\n      button = <img src={previousButton} alt='next-button' style={{transform: 'scaleX(-1)'}} />;\n    }\n    return (\n      <div className='Interaction-button' onClick={this.handleButtonClick} >\n        {button}\n      </div>\n    )\n  }\n}\n\nexport default PreviousAndNextButton;\n","import './App.css';\n\nimport components from './components/index'\n\nconst { PlayButton, PreviousAndNextButton,\n  FileOpenHandler, AudioFilesList } = components\n\nwindow.audioId = { id: null };\n\nfetch('https://res.cloudinary.com/djcffe77b/video/upload/v1604324153/a_emeyr3.mp3', {\n  cache: 'force-cache',\n}).then((result) => {\n  console.log('One audio is loaded');\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AudioFilesList></AudioFilesList>\n        <FileOpenHandler />\n        <div className=\"Audio-Controller\">\n          <PreviousAndNextButton type='previous' />\n          <PlayButton />\n          <PreviousAndNextButton type='next' />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ADD_FILES, DELETE_FILES } from '../actionTypes';\n\nconst initialState = {\n    files: null,\n    isFilesLoaded: false,\n}\n\nexport default function fileHandler(state = initialState, { type, payload }) {\n    switch (type) {\n        case ADD_FILES:\n            return {\n                ...state,\n                files: payload.files\n            }\n        case DELETE_FILES:\n            return {\n                ...state,\n                files: null,\n            }\n        default:\n            return state;\n    }\n}","import { CLICKED } from '../actionTypes';\n\nconst initialState = {\n    currectClicked: null,\n}\n\nexport default function currectClicked(state = initialState, { type, payload }) {\n    console.log(payload);\n    switch (type) {\n        case CLICKED:\n            return {\n                ...state,\n                currectClicked: payload\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport fileInput from './fileInput';\nimport audioList from './audioList'\n\nexport default combineReducers({ fileInput, audioList });","import { createStore } from 'redux'\nimport rootReducer from './reducers';\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}