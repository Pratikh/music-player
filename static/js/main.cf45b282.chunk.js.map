{"version":3,"sources":["redux/selector.js","redux/actionTypes.js","redux/actions.js","components/AudioFilesList.js","svgButtonDesign/folder-open.svg","controllers/fileInputeLoader.js","controllers/filePreloader.js","components/FileOpenHandler.js","svgButtonDesign/playButton.svg","svgButtonDesign/pauseButton.svg","controllers/audioPlayer.js","components/PlayButton.js","svgButtonDesign/previousButton.svg","components/PreviousAndNextButton.js","components/Volume.js","controllers/eventEmitter.js","components/ProgressBar.js","controllers/progressBarUpdater.js","components/PlayingAudio.js","components/index.js","App.js","redux/reducers/fileInput.js","redux/reducers/audioList.js","redux/reducers/audioButtons.js","redux/reducers/audioProgress.js","redux/reducers/audioVolume.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["getCLickedItem","store","audioList","currectClicked","getLoadedFiles","loadedFile","getVolume","audioVolume","volume","getCurrentAudioName","clickedAudioName","ADD_FILES","DELETE_FILES","CLICKED","LOADED_FILES","PLAY_PAUSE_BUTTON","AUDIO_PROGRESS","CURRENT_DURATION","REMAINING_DURATION","AUIDO_VOLUME","CLICKED_AUDIO_NAME","playPauseButton","payload","console","log","type","list","fileName","index","onListClick","name","this","updateClickedAudioItem","currentClickedAudioName","getFileList","props","files","map","bindedCallback","bind","className","onClick","connect","state","fileInput","content","data","dataList","fileNamesData","loadThisFile","fileData","Promise","resolve","reject","fileReader","FileReader","addEventListener","fileReadData","result","push","readyState","readAsDataURL","inputTarget","a","promiseArr","i","length","file","item","all","loadedFiles","window","loadFile","require","assetLoader","loadedAssets","blob","blobData","loadedData","callback","_","noop","allFetchPromis","forEach","album","url","bindedFunction","loading","fetch","cache","then","error","FileOpenHandler","fileDialogueRef","React","createRef","onButtonClickHandler","onButtonClick","getSelectedFilesBinded","getSelectedFiles","filesAdded","assetLoad","current","click","target","fileLoader","addFiles","loadFiles","ref","style","display","src","folderOpenIcon","onChange","event","currentTarget","value","multiple","accept","Component","audioPlayer","hawlerInstance","audioPlayId","audioObjectByIndex","currentAudioId","onAudioStart","sound","Howl","format","onloaderror","onplayerror","onplay","info","onend","onmute","onseek","id","once","play","onAudioEnd","stop","pause","PlayButton","handleButtonClick","clickedOnButton","toggle","currentAudio","onStartCallBacks","button","playButton","alt","pauseButton","audioButton","PreviousAndNextButton","previousButton","transform","audioVolumeUpdate","min","max","playing","eventEmitter","EventEmitter","RemainingSeconds","useState","remainSeconds","setRemainSeconds","useEffect","remainingTimer","minut","seconds","on","removeListener","RemainingMinuts","remainMinut","setRemainMinut","CurrentSeconds","currentSeconds","setCurrentSeconds","CurrentMinuts","currentMinut","setCurrentMinut","updateState","callBackObject","seek","duration","emit","Math","floor","currentDurartion","remainingDuration","UpdateStateValues","requestAnimationFrame","cancelAnimationFrame","audioFile","isAudioAlreadyPresent","components","AudioFilesList","Volume","ProgressBar","setValue","valueUpdate","emittedValue","PlayingAudio","currentClickedItem","currentAudioName","audioProgress","audioCurrentDurationUpdate","audioRemainingDurationUpdate","App","initialState","isFilesLoaded","initalState","combineReducers","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf45b282.chunk.js","sourcesContent":["export const loadedFile = store => store.fileInput.files;\n\nexport const getCLickedItem = store => store.audioList.currectClicked;\n\nexport const getLoadedFiles = store => store.audioList.loadedFile;\n\nexport const getVolume = store => store.audioVolume.volume;\n\nexport const getCurrentAudioName = store => store.audioList.clickedAudioName;","export const ADD_FILES = 'ADD_FILES';\nexport const DELETE_FILES = 'DELETE_FILES';\nexport const UPDATE_CURRENT_AUDIO = 'UPDATE_CURRENT_AUDIO';\nexport const CLICKED = 'CLICKED';\nexport const LOADED_FILES = 'LOADED_FILES';\nexport const PLAY_PAUSE_BUTTON = 'PLAY_PAUSE_BUTTON';\nexport const AUDIO_PROGRESS = 'AUDIO_PROGRESS';\nexport const CURRENT_DURATION = 'CURRENT_DURATION';\nexport const REMAINING_DURATION = 'REMAINING_DURATION';\nexport const AUIDO_VOLUME = 'AUIDO_VOLUME';\nexport const CLICKED_AUDIO_NAME = 'CLICKED_AUDIO_NAME';","import {\n    ADD_FILES, DELETE_FILES, CLICKED, LOADED_FILES, PLAY_PAUSE_BUTTON, AUDIO_PROGRESS, CURRENT_DURATION,\n    REMAINING_DURATION, AUIDO_VOLUME, CLICKED_AUDIO_NAME\n} from './actionTypes';\n\nexport function addFiles(content) {\n    console.log(content);\n    return {\n        type: ADD_FILES,\n        payload: {\n            files: content\n        }\n    }\n}\n\nexport function deleteFiles(content) {\n    return {\n        type: DELETE_FILES,\n        payload: content\n    }\n}\n\nexport function updateClickedAudioItem(content) {\n    console.log(content);\n    return {\n        type: CLICKED,\n        payload: content\n    }\n}\n\nexport function loadFiles(content) {\n    return {\n        type: LOADED_FILES,\n        payload: content\n    }\n}\n\nexport function playPauseButton(payload) {\n    console.log('payload  payloadpayload', payload);\n    return {\n        type: PLAY_PAUSE_BUTTON,\n        payload,\n    }\n}\n\nexport function audioProgress(value) {\n    console.log('heree');\n    return {\n        type: AUDIO_PROGRESS,\n        value,\n    }\n}\n\nexport function audioCurrentDurationUpdate(currentDurartion) {\n    return {\n        type: CURRENT_DURATION,\n        currentDurartion,\n    }\n}\n\nexport function audioRemainingDurationUpdate(remainingDuration) {\n    return {\n        type: REMAINING_DURATION,\n        remainingDuration,\n    }\n}\n\nexport function audioVolumeUpdate(volume) {\n    console.log(volume);\n    return {\n        type: AUIDO_VOLUME,\n        volume,\n    }\n}\n\nexport function currentClickedAudioName(payload) {\n    console.log(payload);\n    return {\n        type: CLICKED_AUDIO_NAME,\n        payload,\n    }\n}","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { loadedFile } from '../redux/selector';\nimport { updateClickedAudioItem, playPauseButton,currentClickedAudioName } from '../redux/actions'\n// import AudioUpdater from '../controllers/playAudio'\nimport './style.css'\n\nconst list = [\n  { fileName: 'first audio', index: 1 },\n  { fileName: 'first audio', index: 2 },\n  { fileName: 'first audio', index: 3 },\n  { fileName: 'first audio', index: 4 },\n  { fileName: 'first audio', index: 5 },\n  { fileName: 'first audio', index: 6 },\n]\n\nfunction onListClick(index,name) {\n  console.log(this);\n  this.updateClickedAudioItem(index + 1);\n  this.playPauseButton(true);\n  this.currentClickedAudioName(name)\n}\n\nfunction getFileList({ props, files }) {\n  console.log(files, props);\n  return files.map(({ fileName, index }) => {\n    console.log(this);\n    const bindedCallback = onListClick.bind(props, index,fileName);\n    return (\n      <li className='List' key={index} onClick={bindedCallback}>\n        {fileName}\n      </li>\n    );\n  })\n}\n\nfunction audioNameList(props) {\n  const data = {\n    props,\n    files: props.files\n  };\n  const dataList = {\n    props,\n    files: list\n  }\n  return (\n    <div className='myBox'>\n      <ol>\n        {getFileList(props.files ? data : dataList)}\n      </ol>\n    </div>\n  );\n}\n\nconst mapStateToProps = function (state) {\n  const files = loadedFile(state);\n  return { files };\n}\n\nexport default connect(mapStateToProps, { updateClickedAudioItem, playPauseButton,currentClickedAudioName })(audioNameList);","export default __webpack_public_path__ + \"static/media/folder-open.610cbfaa.svg\";","let fileNamesData = [];\nfunction loadThisFile(fileData, index) {\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('load', () => {\n            const fileReadData = fileReader.result;\n            fileNamesData.push({\n                fileName: fileData.name,\n                index,\n            })\n            resolve(fileReadData);\n        });\n        fileReader.addEventListener('error', () => {\n            reject(`Something error in file loading :: STATE: ${fileReader.readyState}`);\n        });\n        fileReader.readAsDataURL(fileData);\n    });\n}\n\nasync function loadFile(inputTarget) {\n    let promiseArr = [];\n    for (let i = 0; i < inputTarget.files.length; i++) {\n        const file = inputTarget.files.item(i);\n        promiseArr.push(loadThisFile(file, i));\n    }\n    const loadedFiles = await Promise.all(promiseArr);\n    window.loadedFiles = loadedFiles;\n    return { loadedFiles, fileData: fileNamesData };\n}\n\nexport default loadFile;","import _ from 'lodash'\nconst data = require('../config.json');\n\nclass AssetLoader {\n    constructor() {\n        this.loadedAssets = [];\n        window.loadedAssets = this.loadedAssets;\n        window.data = data;\n    }\n\n    async loading(name,result){\n        const blobData = await result.blob();\n        const loadedData = {\n            name,\n            data:blobData\n        }\n        this.loadedAssets.push(loadedData);\n        console.log('aaa')\n    }\n\n    async loadAsset(callback = _.noop) {\n        const allFetchPromis = [];\n\n        _.forEach(data,album => {\n            album.forEach(({ url, name }) => {\n                const bindedFunction = this.loading.bind(this,name);\n                allFetchPromis.push(\n                    fetch(url, {\n                        cache: 'force-cache',\n                    }).then(bindedFunction));\n            })\n        });\n        try{\n            await Promise.all(allFetchPromis);\n            console.log('FETCHED ALL ASSETS');\n            callback();\n        }catch(error){\n            console.error('Got this error:::SORRY ',error)\n        }\n    }\n}\n\nconst assetLoader = new AssetLoader();\nexport default assetLoader;","import React from 'react';\nimport { connect } from 'react-redux'\n// import { audioPlayer } from '../controllers/audioPlayer'\nimport folderOpenIcon from '../svgButtonDesign/folder-open.svg'\nimport { addFiles, loadFiles } from '../redux/actions';\nimport fileLoader from '../controllers/fileInputeLoader'\nimport assetLoad from '../controllers/filePreloader'\nimport './style.css'\n\nclass FileOpenHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileDialogueRef = React.createRef();\n    this.onButtonClickHandler = this.onButtonClick.bind(this);\n    this.getSelectedFilesBinded = this.getSelectedFiles.bind(this);\n    this.state = {\n      filesAdded: true,\n      files: null,\n    }\n    window.assetLoad = assetLoad;\n  }\n\n  componentDidMount() {\n    // fetch(\"/Media/Album/2020%20Grammy%20Nominees/Various%20Artists%20-%202020%20Grammy%20Nominees%20%282020%29/\")\n    //   .then(response => response.text())\n    //   .then(result => console.log(result))\n    //   .catch(error => console.log('error', error));\n    // fetch('/search?q=javascript')\n    // .then(resp => {\n    //   console.log('======success=======');\n    //   resp.blob().then(re => {\n    //     var FR = new FileReader();\n    //     FR.onload = event => {\n    //       console.log(FR.result);\n    //     };\n    //     FR.readAsText(re);\n    //   });\n    // })\n    // .catch(err => {\n    //   console.log('======failure=======');\n    //   console.log(err);\n    // });\n  }\n\n  onButtonClick() {\n    this.fileDialogueRef.current.click();\n  }\n\n  async getSelectedFiles({ target }) {\n    const { fileData, loadedFiles } = await fileLoader(target);\n    this.props.addFiles(fileData);\n    this.props.loadFiles(loadedFiles);\n\n    console.log('fileLoader component', fileData);\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          type='file'\n          ref={this.fileDialogueRef}\n          style={{ display: \"none\" }}\n          src={folderOpenIcon}\n          onChange={this.getSelectedFilesBinded}\n          onClick={(event) => {\n            event.currentTarget.value = null\n          }}\n          multiple accept='audio/*' />\n        <button className='fileButton' onClick={this.onButtonClickHandler}>Open File</button>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { addFiles, loadFiles })(FileOpenHandler);\n","export default __webpack_public_path__ + \"static/media/playButton.c49abbd7.svg\";","export default __webpack_public_path__ + \"static/media/pauseButton.cadf7947.svg\";","import _ from 'lodash'\nimport { Howl } from 'howler';\n\nclass AudioPlayer {\n  constructor() {\n    this.hawlerInstance = [];\n    this.audioPlayId = {};\n    this.audioObjectByIndex = {};\n    this.currentAudioId = null;\n  }\n\n  play(fileData, onAudioStart = _.noop) {\n    console.log('In play method');\n    return new Promise((resolve, reject) => {\n      const sound = new Howl({\n        src: fileData.src,\n        format: 'mp4',\n        onloaderror: () => {\n          console.error('Audio file is not loaded');\n          reject();\n        },\n        onplayerror: () => {\n          console.error('On play error');\n          reject();\n        },\n        onplay: () => {\n          console.info('Audio started playing');\n        },\n        onend: () => {\n          console.info('Audio playing completed');\n        },\n        onmute: () => {\n          console.info('Muted');\n        },\n        onseek:()=>{\n          console.log('on seek');\n        }\n      });\n      let id = null;\n      sound.once('load', () => {\n        id = sound.play();\n        this.currentAudioId = id;\n        this.audioObjectByIndex[fileData.index] = sound;\n        this.audioPlayId[id] = sound;\n        console.log('in load ID', id);\n        onAudioStart();\n        resolve(id);\n      });\n      sound.once('end', () => { this.onAudioEnd(id) });\n\n    })\n  }\n\n  // Once completed no need a object ref\n  onAudioEnd(id) {\n    console.log('Audio ended');\n    // delete this.audioPlayId[id];\n  }\n\n  // should send id to stop needed audio\n  stop(id) {\n    this.audioPlayId[id].stop(id);\n  }\n\n  stopAll() {\n    // Need to work on it.\n  }\n\n  pause(id) {\n    this.audioPlayId[id].pause();\n  }\n\n  resume(id) {\n    this.audioPlayId[id].play();\n  }\n\n  get currentAudio() {\n    return this.audioPlayId[this.currentAudioId];\n  }\n}\n\nconst audioPlayer = new AudioPlayer();\nexport default audioPlayer;\nwindow.audioPlayer = audioPlayer;\n","import React from 'react';\nimport playButton from '../svgButtonDesign/playButton.svg'\nimport pauseButton from '../svgButtonDesign/pauseButton.svg'\nimport audioPlayer from '../controllers/audioPlayer';\nimport { connect } from 'react-redux'\nimport { playPauseButton } from '../redux/actions'\n\n\nclass PlayButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.clickedOnButton.bind(this);\n  }\n\n  clickedOnButton() {\n    this.props.playPauseButton(!this.props.toggle)\n    if (this.props.toggle) {\n      audioPlayer.currentAudio.pause();\n    } else {\n      audioPlayer.currentAudio.play();\n      audioPlayer.currentAudio.onStartCallBacks && audioPlayer.currentAudio.onStartCallBacks();\n\n    }\n  }\n\n  render() {\n    let button = <img src={playButton} alt='pause-button' />;\n    if (this.props.toggle) {\n      button = <img src={pauseButton} alt='play-button' />;\n    }\n    return (\n      <div className='Interaction-button' onClick={this.handleButtonClick} >\n        { button}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    toggle: state.audioButton.toggle,\n  }\n}\n\nexport default connect(mapStateToProps, { playPauseButton })(PlayButton);\n","export default __webpack_public_path__ + \"static/media/previousButton.73c027af.svg\";","import React from 'react';\nimport previousButton from '../svgButtonDesign/previousButton.svg'\n\nclass PreviousAndNextButton extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      toggle:true,\n    }\n    this.handleButtonClick = this.clickedOnButton.bind(this);\n  }\n\n  clickedOnButton(){\n    console.log('Clicked',this.props);\n  }\n\n  render(){\n    let button = <img src={previousButton} alt='pause-button' />;\n    if(this.props.type === \"next\"){\n      button = <img src={previousButton} alt='next-button' style={{transform: 'scaleX(-1)'}} />;\n    }\n    return (\n      <div className='Interaction-button' onClick={this.handleButtonClick} >\n        {button}\n      </div>\n    )\n  }\n}\n\nexport default PreviousAndNextButton;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport audioPlayer from '../controllers/audioPlayer';\nimport './style.css'\nimport { getVolume  } from '../redux/selector';\nimport { audioVolumeUpdate  } from '../redux/actions';\n\n function Volume(props) {\n    function onChange({ target }) {\n        const volume = target.value / 100;\n        props.audioVolumeUpdate(target.value);\n        audioPlayer.currentAudio && audioPlayer.currentAudio.playing() && audioPlayer.currentAudio.volume(volume);\n    }\n    return (\n        <div className='Volume'>\n            <input type=\"range\" min=\"1\" max=\"100\" value={props.volume} onChange={onChange} />\n            <p>{props.volume}</p>\n        </div >\n    )\n}\n\nconst mapStateToProps = function(state){\n    return {\n        volume: getVolume(state),\n    }\n}\n\nexport default connect(mapStateToProps,{ audioVolumeUpdate })(Volume);","import { EventEmitter } from 'events';\nconst eventEmitter = new EventEmitter();\n\nexport default eventEmitter;","import React, { useState, useEffect } from 'react';\nimport eventEmitter from '../controllers/eventEmitter'\nimport './style.css'\n\nfunction ProgressBarSetter() {\n    const [value, setValue] = useState(0);\n    useEffect(() => {\n        const valueUpdate = (emittedValue) => {\n            setValue(emittedValue);\n        }\n        eventEmitter.on('updateprogress', valueUpdate);\n        return function cleanup() {\n            eventEmitter.removeListener('updateprogress', valueUpdate)\n        }\n    }, [value])\n    return (\n        <>\n            <div className='Progress'>\n                <div className='progressTimer'>\n                    <RemainingMinuts />\n                    <p>:</p>\n                    <RemainingSeconds />\n                </div>\n                <progress type=\"range\" min=\"1.5\" max=\"100\" value={value} />\n                <div className='progressTimer'>\n                    <CurrentMinuts />\n                    <p>:</p>\n                    <CurrentSeconds />\n                </div>\n            </div >\n        </>\n    );\n}\n\nfunction RemainingSeconds() {\n    const [remainSeconds, setRemainSeconds] = useState(0);\n\n    useEffect(() => {\n        const remainingTimer = ({\n            minut,\n            seconds,\n        }) => {\n            setRemainSeconds(seconds);\n        };\n        eventEmitter.on('audioremainingduration', remainingTimer);\n        return function cleanup() {\n            eventEmitter.removeListener('audioremainingduration', remainingTimer)\n        }\n    }, [remainSeconds]);\n    return (<>\n        <p>{remainSeconds}</p>\n    </>)\n\n}\n\nfunction RemainingMinuts() {\n    const [remainMinut, setRemainMinut] = useState(0);\n    useEffect(() => {\n        const remainingTimer = ({\n            minut,\n        }) => {\n            setRemainMinut(minut);\n        };\n        eventEmitter.on('audioremainingduration', remainingTimer);\n        return function cleanup() {\n            eventEmitter.removeListener('audioremainingduration', remainingTimer)\n        }\n    }, [setRemainMinut]);\n    return (<>\n        <p>{remainMinut}</p>\n    </>)\n}\n\nfunction CurrentSeconds() {\n    const [currentSeconds, setCurrentSeconds] = useState(0);\n    useEffect(() => {\n        const remainingTimer = ({\n            seconds,\n        }) => {\n            setCurrentSeconds(seconds);\n        };\n        eventEmitter.on('audiocurrentduration', remainingTimer);\n        return function cleanup() {\n            eventEmitter.removeListener('audiocurrentduration', remainingTimer)\n        }\n    }, [currentSeconds]);\n    return (<>\n        <p>{currentSeconds}</p>\n    </>)\n}\n\nfunction CurrentMinuts() {\n    const [currentMinut, setCurrentMinut] = useState(0);\n    useEffect(() => {\n        const remainingTimer = ({\n            minut,\n        }) => {\n            setCurrentMinut(minut);\n        };\n        eventEmitter.on('audiocurrentduration', remainingTimer);\n        return function cleanup() {\n            eventEmitter.removeListener('audiocurrentduration', remainingTimer)\n        }\n    }, [setCurrentMinut]);\n    return (<>\n        <p>{currentMinut}</p>\n    </>)\n}\n\nexport default ProgressBarSetter;\n","import audioPlayer from './audioPlayer';\nimport eventEmitter from './eventEmitter';\n\nexport function updateState(callBackObject) {\n    if (audioPlayer.currentAudio) {\n        UpdateStateValues();\n        if (audioPlayer.currentAudio.playing()) {\n            requestAnimationFrame(updateState);\n        } else {\n            cancelAnimationFrame(updateState);\n        }\n    }\n}\n\nfunction UpdateStateValues() {\n    const value = audioPlayer.currentAudio.seek() * (100 / audioPlayer.currentAudio.duration());\n    eventEmitter.emit('updateprogress', value);\n\n    let minut = Math.floor(audioPlayer.currentAudio.seek() / 60) ? Math.floor(audioPlayer.currentAudio.seek() / 60) : 0;\n    let seconds = Math.floor(audioPlayer.currentAudio.seek() - (minut * 60)) ? Math.floor(audioPlayer.currentAudio.seek() - (minut * 60)) : 0\n    const currentDurartion = {\n        minut,\n        seconds,\n    };\n    eventEmitter.emit('audiocurrentduration', currentDurartion);\n\n    minut = Math.floor(audioPlayer.currentAudio.duration() / 60);\n    seconds = Math.floor(audioPlayer.currentAudio.duration() - (minut * 60))\n    const remainingDuration = {\n        minut,\n        seconds,\n    };\n    eventEmitter.emit('audioremainingduration', remainingDuration);\n}","import { connect } from \"react-redux\";\nimport audioPlayer from '../controllers/audioPlayer';\nimport { getCLickedItem, getLoadedFiles, getCurrentAudioName } from '../redux/selector';\nimport { audioProgress, audioCurrentDurationUpdate, audioRemainingDurationUpdate } from '../redux/actions';\nimport { updateState } from '../controllers/progressBarUpdater'\n\nasync function play(audioFile) {\n    const isAudioAlreadyPresent = audioPlayer.audioObjectByIndex[audioFile.index];\n    if (audioPlayer.currentAudio) {\n        audioPlayer.currentAudio.pause();\n    }\n    if (isAudioAlreadyPresent) {\n        audioPlayer.currentAudioId = isAudioAlreadyPresent.play();\n        return;\n    }\n    try {\n        await audioPlayer.play(audioFile);\n        updateState();\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nfunction getAudioRealtedData(props) {\n    console.log(props);\n    if (props.currentClickedItem && !!props.getLoadedFiles) {\n        const index = props.currentClickedItem - 1;\n        const src = props.getLoadedFiles[index];\n        const playData = {\n            src,\n            index,\n        }\n        play(playData, {\n            audioProgress: props.audioProgress,\n            audioCurrentDurationUpdate: props.audioCurrentDurationUpdate,\n            audioRemainingDurationUpdate: props.audioRemainingDurationUpdate\n        });\n    }\n    return (<div>{props.currentAudioName}</div>);\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        currentClickedItem: getCLickedItem(state),\n        getLoadedFiles: getLoadedFiles(state),\n        currentAudioName: getCurrentAudioName(state),\n    }\n}\n\nexport default connect(mapStateToProps, {\n    audioProgress,\n    audioCurrentDurationUpdate,\n    audioRemainingDurationUpdate\n})(getAudioRealtedData);","import AudioFilesList from './AudioFilesList';\nimport FileOpenHandler from './FileOpenHandler';\nimport PlayButton from './PlayButton';\nimport PreviousAndNextButton from './PreviousAndNextButton';\nimport Volume from './Volume'\nimport ProgressBar from './ProgressBar'\nimport PlayingAudio from './PlayingAudio'\n\n\nconst components = {\n    AudioFilesList,\n    FileOpenHandler,\n    PlayButton,\n    PreviousAndNextButton,\n    Volume,\n    ProgressBar,\n    PlayingAudio\n}\n\nexport default components;","import './App.css';\n\nimport components from './components/index'\n\nconst { PlayButton, PreviousAndNextButton,\n  FileOpenHandler, AudioFilesList, Volume, ProgressBar, PlayingAudio } = components\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AudioFilesList />\n        <FileOpenHandler />\n        <ProgressBar value='0' />\n        <Volume />\n        <div className=\"Audio-Controller\">\n          <PreviousAndNextButton type='previous' />\n          <PlayButton />\n          <PreviousAndNextButton type='next' />\n        </div>\n        <PlayingAudio />\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n","import { ADD_FILES, DELETE_FILES } from '../actionTypes';\n\nconst initialState = {\n    files: null,\n    isFilesLoaded: false,\n}\n\nexport default function fileHandler(state = initialState, { type, payload }) {\n    switch (type) {\n        case ADD_FILES:\n            return {\n                ...state,\n                files: payload.files\n            }\n        case DELETE_FILES:\n            return {\n                ...state,\n                files: null,\n            }\n        default:\n            return state;\n    }\n}","import { CLICKED, LOADED_FILES, CLICKED_AUDIO_NAME } from '../actionTypes';\n\nconst initialState = {\n    currectClicked: null,\n    loadedFile: null,\n    clickedAudioName:'click on list',\n}\n\nexport default function currectClicked(state = initialState, { type, payload }) {\n    switch (type) {\n        case CLICKED:\n            return {\n                ...state,\n                currectClicked: payload\n            }\n        case LOADED_FILES:\n            return {\n                ...state,\n                loadedFile: payload\n            }\n        case CLICKED_AUDIO_NAME:\n            return {\n                ...state,\n                clickedAudioName: payload\n            }\n        default:\n            return state;\n    }\n}","import { PLAY_PAUSE_BUTTON } from '../actionTypes'\n\nconst initialState = {\n    toggle: false,\n}\n\nexport default function togglePlayPauseButton(state = initialState, { type, payload }) {\n    switch (type) {\n        case PLAY_PAUSE_BUTTON:\n            return {\n                ...state,\n                toggle: payload\n            }\n        default:\n            return state;\n    }\n}","import { AUDIO_PROGRESS, CURRENT_DURATION, REMAINING_DURATION } from '../actionTypes';\n\nconst initialState = {\n    value: 0,\n    currentDurartion: {\n        minut: 0,\n        seconds: 0\n    },\n    remainingDuration: {\n        minut: 0,\n        seconds: 0\n    }\n}\n\nexport default function fileHandler(state = initialState, { type, value, currentDurartion, remainingDuration }) {\n    console.log('REDUCER');\n\n    switch (type) {\n        case AUDIO_PROGRESS:\n            return {\n                ...state,\n                value\n            }\n        case CURRENT_DURATION:\n            return {\n                ...state,\n                currentDurartion\n            }\n        case REMAINING_DURATION:\n            return {\n                ...state,\n                remainingDuration\n            }\n        default:\n            return state;\n    }\n}","import { AUIDO_VOLUME } from '../actionTypes';\n\nconst initalState = {\n    volume: 50,\n}\n\nexport default function audioVolume(state = initalState, { type, volume }) {\n    switch (type) {\n        case AUIDO_VOLUME:\n            return {\n                ...state,\n                volume,\n            }\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport fileInput from './fileInput';\nimport audioList from './audioList';\nimport togglePlayPauseButton from './audioButtons'\nimport audioProgress from './audioProgress'\nimport audioVolume from './audioVolume'\n\nexport default combineReducers({\n    fileInput,\n    audioList,\n    audioButton: togglePlayPauseButton,\n    audioProgress,\n    audioVolume\n});","import { createStore } from 'redux'\nimport rootReducer from './reducers';\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}