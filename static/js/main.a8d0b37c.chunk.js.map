{"version":3,"sources":["redux/selector.js","redux/actionTypes.js","redux/actions.js","components/AudioFilesList.js","svgButtonDesign/folder-open.svg","controllers/fileInputeLoader.js","components/FileOpenHandler.js","svgButtonDesign/playButton.svg","svgButtonDesign/pauseButton.svg","controllers/audioPlayer.js","components/PlayButton.js","svgButtonDesign/previousButton.svg","components/PreviousAndNextButton.js","components/Volume.js","controllers/eventEmitter.js","components/ProgressBar.js","controllers/progressBarUpdater.js","components/PlayingAudio.js","components/index.js","controllers/filePreloader.js","App.js","redux/reducers/fileInput.js","redux/reducers/audioList.js","redux/reducers/audioButtons.js","redux/reducers/audioProgress.js","redux/reducers/audioVolume.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["loadedFile","store","fileInput","files","getCLickedItem","audioList","currectClicked","getVolume","audioVolume","volume","getCurrentAudioName","clickedAudioName","ADD_FILES","DELETE_FILES","CLICKED","LOADED_FILES","PLAY_PAUSE_BUTTON","AUDIO_PROGRESS","CURRENT_DURATION","REMAINING_DURATION","AUIDO_VOLUME","CLICKED_AUDIO_NAME","addFiles","content","type","payload","updateClickedAudioItem","loadFiles","playPauseButton","currentClickedAudioName","i","list","fileName","index","onListClick","name","this","getFileList","props","map","bindedCallback","bind","className","onClick","connect","state","data","dataList","fileNamesData","loadThisFile","fileData","Promise","resolve","reject","fileReader","FileReader","addEventListener","fileReadData","result","push","readyState","readAsDataURL","inputTarget","a","promiseArr","length","file","item","all","window","loadFile","FileOpenHandler","fileDialogueRef","createRef","onButtonClickHandler","onButtonClick","getSelectedFilesBinded","getSelectedFiles","current","click","target","fileLoader","ref","style","display","src","folderOpenIcon","onChange","event","currentTarget","value","multiple","accept","Component","audioPlayer","hawlerInstance","audioPlayId","audioObjectByIndex","currentAudioId","onAudioStart","_","noop","sound","Howl","format","onloaderror","console","error","onplayerror","onplay","info","onend","onmute","onseek","log","id","once","play","onAudioEnd","stop","pause","PlayButton","handleButtonClick","clickedOnButton","toggle","currentAudio","onStartCallBacks","button","playButton","alt","pauseButton","audioButton","PreviousAndNextButton","currentClickedItem","previousButton","transform","React","currentAudioName","audioVolumeUpdate","min","max","playing","eventEmitter","EventEmitter","RemainingSeconds","useState","remainSeconds","setRemainSeconds","useEffect","remainingTimer","minut","seconds","on","removeListener","RemainingMinuts","remainMinut","setRemainMinut","CurrentSeconds","currentSeconds","setCurrentSeconds","CurrentMinuts","currentMinut","setCurrentMinut","updateState","seek","duration","emit","Math","floor","currentDurartion","remainingDuration","UpdateStateValues","requestAnimationFrame","cancelAnimationFrame","audioFile","isAudioAlreadyPresent","components","AudioFilesList","Volume","ProgressBar","setValue","valueUpdate","emittedValue","PlayingAudio","require","assetLoader","loadedAssets","loadedFiles","blob","blobData","consverToBlobData","urlResult","callback","allFetchPromis","forEach","album","url","bindedFunction","loading","fetch","cache","then","filePreloader","loadAsset","initialState","isFilesLoaded","initalState","combineReducers","audioProgress","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8d0b37c.chunk.js","sourcesContent":["export const loadedFile = store => store.fileInput.files;\n\nexport const getCLickedItem = store => store.audioList.currectClicked;\n\nexport const getVolume = store => store.audioVolume.volume;\n\nexport const getCurrentAudioName = store => store.audioList.clickedAudioName;","export const ADD_FILES = 'ADD_FILES';\nexport const DELETE_FILES = 'DELETE_FILES';\nexport const UPDATE_CURRENT_AUDIO = 'UPDATE_CURRENT_AUDIO';\nexport const CLICKED = 'CLICKED';\nexport const LOADED_FILES = 'LOADED_FILES';\nexport const PLAY_PAUSE_BUTTON = 'PLAY_PAUSE_BUTTON';\nexport const AUDIO_PROGRESS = 'AUDIO_PROGRESS';\nexport const CURRENT_DURATION = 'CURRENT_DURATION';\nexport const REMAINING_DURATION = 'REMAINING_DURATION';\nexport const AUIDO_VOLUME = 'AUIDO_VOLUME';\nexport const CLICKED_AUDIO_NAME = 'CLICKED_AUDIO_NAME';","import {\n    ADD_FILES, DELETE_FILES, CLICKED, LOADED_FILES, PLAY_PAUSE_BUTTON, AUDIO_PROGRESS, CURRENT_DURATION,\n    REMAINING_DURATION, AUIDO_VOLUME, CLICKED_AUDIO_NAME\n} from './actionTypes';\n\nexport function addFiles(content) {\n    return {\n        type: ADD_FILES,\n        payload: {\n            files: content\n        }\n    }\n}\n\nexport function deleteFiles(content) {\n    return {\n        type: DELETE_FILES,\n        payload: content\n    }\n}\n\nexport function updateClickedAudioItem(content) {\n    return {\n        type: CLICKED,\n        payload: content\n    }\n}\n\nexport function loadFiles(content) {\n    return {\n        type: LOADED_FILES,\n        payload: content\n    }\n}\n\nexport function playPauseButton(payload) {\n    return {\n        type: PLAY_PAUSE_BUTTON,\n        payload,\n    }\n}\n\nexport function audioProgress(value) {\n    return {\n        type: AUDIO_PROGRESS,\n        value,\n    }\n}\n\nexport function audioCurrentDurationUpdate(currentDurartion) {\n    return {\n        type: CURRENT_DURATION,\n        currentDurartion,\n    }\n}\n\nexport function audioRemainingDurationUpdate(remainingDuration) {\n    return {\n        type: REMAINING_DURATION,\n        remainingDuration,\n    }\n}\n\nexport function audioVolumeUpdate(volume) {\n    return {\n        type: AUIDO_VOLUME,\n        volume,\n    }\n}\n\nexport function currentClickedAudioName(payload) {\n    return {\n        type: CLICKED_AUDIO_NAME,\n        payload,\n    }\n}","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { loadedFile } from '../redux/selector';\nimport { updateClickedAudioItem, playPauseButton, currentClickedAudioName } from '../redux/actions'\nimport './style.css'\nlet i = 1;\n\nconst list = [\n  { fileName: 'first audio', index: 1 },\n  { fileName: 'second audio', index: 2 },\n  { fileName: 'third audio', index: 3 },\n  { fileName: 'fourth audio', index: 4 },\n  { fileName: 'fifth audio', index: 5 },\n  { fileName: 'sixth audio', index: 6 },\n]\n\nfunction onListClick(index, name) {\n  this.updateClickedAudioItem('' + (index - 1));\n  this.playPauseButton(true);\n  this.currentClickedAudioName(name)\n}\n\nfunction getFileList({ props, files }) {\n  return files.map(({ fileName}) => {\n    const bindedCallback = onListClick.bind(props, i, fileName);\n    return (\n      <li className='List' key={i++} onClick={bindedCallback}>\n        {fileName}\n      </li>\n    );\n  })\n}\n\nfunction audioNameList(props) {\n  const data = {\n    props,\n    files: props.files\n  };\n  const dataList = {\n    props,\n    files: list\n  }\n  const files = props.files ? data : dataList\n  return (\n    <div className='myBox'>\n      <ol>\n        {getFileList(files)}\n      </ol>\n    </div>\n  );\n}\n\nconst mapStateToProps = function (state) {\n  const files = loadedFile(state);\n  return { files };\n}\n\nexport default connect(mapStateToProps, { updateClickedAudioItem, playPauseButton, currentClickedAudioName })(audioNameList);","export default __webpack_public_path__ + \"static/media/folder-open.610cbfaa.svg\";","let fileNamesData = [];\nexport function loadThisFile(fileData, index) {\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('load', () => {\n            const fileReadData = fileReader.result;\n            fileNamesData.push({\n                fileName: fileData.name,\n                index,\n                data:fileReadData\n            })\n            resolve();\n        });\n        fileReader.addEventListener('error', () => {\n            reject(`Something error in file loading :: STATE: ${fileReader.readyState}`);\n        });\n        fileReader.readAsDataURL(fileData);\n    });\n}\n\nasync function loadFile(inputTarget) {\n    let promiseArr = [];\n    for (let i = 0; i < inputTarget.files.length; i++) {\n        const file = inputTarget.files.item(i);\n        promiseArr.push(loadThisFile(file, i));\n    }\n   await Promise.all(promiseArr);\n    return { fileData: fileNamesData };\n}\nwindow.fileNamesData = fileNamesData;\n\nexport default loadFile;","import React, { createRef, Component } from 'react';\nimport { connect } from 'react-redux'\nimport folderOpenIcon from '../svgButtonDesign/folder-open.svg'\nimport { addFiles, loadFiles } from '../redux/actions';\nimport fileLoader from '../controllers/fileInputeLoader'\nimport './style.css'\n\nclass FileOpenHandler extends Component {\n  constructor(props) {\n    super(props);\n    this.fileDialogueRef = createRef();\n    this.onButtonClickHandler = this.onButtonClick.bind(this);\n    this.getSelectedFilesBinded = this.getSelectedFiles.bind(this);\n  }\n\n  onButtonClick() {\n    this.fileDialogueRef.current.click();\n  }\n\n  async getSelectedFiles({ target }) {\n    const { fileData } = await fileLoader(target);\n    this.props.addFiles(fileData);\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          type='file'\n          ref={this.fileDialogueRef}\n          style={{ display: \"none\" }}\n          src={folderOpenIcon}\n          onChange={this.getSelectedFilesBinded}\n          onClick={(event) => {\n            event.currentTarget.value = null\n          }}\n          multiple accept='audio/*' />\n        <button className='fileButton' onClick={this.onButtonClickHandler}>Open File</button>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { addFiles, loadFiles })(FileOpenHandler);\n","export default __webpack_public_path__ + \"static/media/playButton.c49abbd7.svg\";","export default __webpack_public_path__ + \"static/media/pauseButton.cadf7947.svg\";","import _ from 'lodash'\nimport { Howl } from 'howler';\n\nclass AudioPlayer {\n  constructor() {\n    this.hawlerInstance = [];\n    this.audioPlayId = {};\n    this.audioObjectByIndex = {};\n    this.currentAudioId = null;\n  }\n\n  play(fileData, onAudioStart = _.noop) {\n    return new Promise((resolve, reject) => {\n      const sound = new Howl({\n        src: fileData.src,\n        format: 'mp4',\n        onloaderror: () => {\n          console.error('Audio file is not loaded');\n          reject('Audio file is not loaded');\n        },\n        onplayerror: () => {\n          console.error('On play error');\n          reject('On play error');\n        },\n        onplay: () => {\n          console.info('Audio started playing');\n        },\n        onend: () => {\n          console.info('Audio playing completed');\n        },\n        onmute: () => {\n          console.info('Muted');\n        },\n        onseek: () => {\n          console.log('on seek');\n        }\n      });\n      let id = null;\n      sound.once('load', () => {\n        id = sound.play();\n        this.currentAudioId = id;\n        this.audioObjectByIndex[fileData.index] = sound;\n        this.audioPlayId[id] = sound;\n        onAudioStart();\n        resolve(id);\n      });\n      sound.once('end', () => { this.onAudioEnd(id) });\n\n    })\n  }\n\n  // Once completed no need a object ref\n  onAudioEnd(id) {\n    console.log('Audio ended');\n    // delete this.audioPlayId[id];\n  }\n\n  // should send id to stop needed audio\n  stop(id) {\n    this.audioPlayId[id].stop(id);\n  }\n\n  stopAll() {\n    // Need to work on it.\n  }\n\n  pause(id) {\n    this.audioPlayId[id].pause();\n  }\n\n  resume(id) {\n    this.audioPlayId[id].play();\n  }\n\n  get currentAudio() {\n    return this.audioPlayId[this.currentAudioId];\n  }\n}\n\nconst audioPlayer = new AudioPlayer();\nexport default audioPlayer;\nwindow.audioPlayer = audioPlayer;\n","import React, { Component } from 'react';\nimport playButton from '../svgButtonDesign/playButton.svg'\nimport pauseButton from '../svgButtonDesign/pauseButton.svg'\nimport audioPlayer from '../controllers/audioPlayer';\nimport { connect } from 'react-redux'\nimport { playPauseButton } from '../redux/actions'\n\n\nclass PlayButton extends Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.clickedOnButton.bind(this);\n  }\n\n  clickedOnButton() {\n    this.props.playPauseButton(!this.props.toggle)\n    if (this.props.toggle) {\n      audioPlayer.currentAudio.pause();\n    } else {\n      audioPlayer.currentAudio.play();\n      audioPlayer.currentAudio.onStartCallBacks && audioPlayer.currentAudio.onStartCallBacks();\n    }\n  }\n\n  render() {\n    let button = <img src={playButton} alt='pause-button' />;\n    if (this.props.toggle) {\n      button = <img src={pauseButton} alt='play-button' />;\n    }\n    return (\n      <div className='Interaction-button' onClick={this.handleButtonClick} >\n        { button}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    toggle: state.audioButton.toggle,\n  }\n}\n\nexport default connect(mapStateToProps, { playPauseButton })(PlayButton);\n","export default __webpack_public_path__ + \"static/media/previousButton.73c027af.svg\";","import React from 'react';\nimport previousButton from '../svgButtonDesign/previousButton.svg'\nimport audioPlayer from '../controllers/audioPlayer';\nimport { connect } from 'react-redux';\nimport { updateClickedAudioItem, currentClickedAudioName } from '../redux/actions'\nimport { getCLickedItem, loadedFile, getCurrentAudioName } from '../redux/selector';\n\nclass PreviousAndNextButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.clickedOnButton.bind(this);\n  }\n\n  clickedOnButton() {\n    const { type } = this.props;\n    if (audioPlayer.currentAudio) {\n      audioPlayer.currentAudio.pause();\n    }\n    let index = this.props.currentClickedItem;\n    let fileName = '';\n    if (this.props.currentClickedItem > 0 && type !== 'next') {\n      index--;\n    } else if (this.props.currentClickedItem < this.props.loadedFile.length && type === 'next') {\n      index++;\n    }\n    fileName = this.props.loadedFile[index].fileName;\n    this.props.updateClickedAudioItem(index);\n    this.props.currentClickedAudioName(fileName);\n  }\n\n  render() {\n    let button = <img src={previousButton} alt='pause-button' />;\n    if (this.props.type === \"next\") {\n      button = <img src={previousButton} alt='next-button' style={{ transform: 'scaleX(-1)' }} />;\n    }\n    return (\n      <div className='Interaction-button' onClick={this.handleButtonClick} >\n        {button}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    currentClickedItem: getCLickedItem(state),\n    loadedFile: loadedFile(state),\n    currentAudioName: getCurrentAudioName(state),\n  }\n}\n\nexport default connect(mapStateToProps, { updateClickedAudioItem, currentClickedAudioName })(PreviousAndNextButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport audioPlayer from '../controllers/audioPlayer';\nimport './style.css'\nimport { getVolume } from '../redux/selector';\nimport { audioVolumeUpdate } from '../redux/actions';\n\nfunction Volume(props) {\n    function onChange({ target }) {\n        const volume = target.value / 100;\n        props.audioVolumeUpdate(target.value);\n        audioPlayer.currentAudio && audioPlayer.currentAudio.playing() && audioPlayer.currentAudio.volume(volume);\n    }\n    return (\n        <div className='Volume'>\n            <input type=\"range\" min=\"1\" max=\"100\" value={props.volume} onChange={onChange} />\n            <p>{props.volume}</p>\n        </div >\n    )\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        volume: getVolume(state),\n    }\n}\n\nexport default connect(mapStateToProps, { audioVolumeUpdate })(Volume);","import { EventEmitter } from 'events';\nconst eventEmitter = new EventEmitter();\n\nexport default eventEmitter;","import React, { useState, useEffect } from 'react';\nimport eventEmitter from '../controllers/eventEmitter'\nimport './style.css'\n\nfunction ProgressBarSetter() {\n    const [value, setValue] = useState(0);\n\n    function onComponentChange() {\n        const valueUpdate = (emittedValue) => {\n            setValue(emittedValue);\n        }\n        eventEmitter.on('updateprogress', valueUpdate);\n        return function cleanup() {\n            eventEmitter.removeListener('updateprogress', valueUpdate)\n        }\n    }\n\n    useEffect(onComponentChange, [value]);\n    return (\n        <>\n            <div className='Progress'>\n                <div className='progressTimer'>\n                    <RemainingMinuts />\n                    <p>:</p>\n                    <RemainingSeconds />\n                </div>\n                <progress type=\"range\" min=\"1.5\" max=\"100\" value={value} />\n                <div className='progressTimer'>\n                    <CurrentMinuts />\n                    <p>:</p>\n                    <CurrentSeconds />\n                </div>\n            </div >\n        </>\n    );\n}\n\nfunction RemainingSeconds() {\n    const [remainSeconds, setRemainSeconds] = useState(0);\n    function onChange() {\n        const remainingTimer = ({\n            minut,\n            seconds,\n        }) => {\n            setRemainSeconds(seconds);\n        };\n        eventEmitter.on('audioremainingduration', remainingTimer);\n        return function cleanup() {\n            eventEmitter.removeListener('audioremainingduration', remainingTimer)\n        }\n    }\n\n    useEffect(onChange, [remainSeconds]);\n    return (<>\n        <p>{remainSeconds}</p>\n    </>)\n\n}\n\nfunction RemainingMinuts() {\n    const [remainMinut, setRemainMinut] = useState(0);\n    function onChange() {\n        const remainingTimer = ({\n            minut,\n        }) => {\n            setRemainMinut(minut);\n        };\n        eventEmitter.on('audioremainingduration', remainingTimer);\n        return function cleanup() {\n            eventEmitter.removeListener('audioremainingduration', remainingTimer)\n        }\n    }\n\n    useEffect(onChange, [setRemainMinut]);\n    return (<>\n        <p>{remainMinut}</p>\n    </>)\n}\n\nfunction CurrentSeconds() {\n    const [currentSeconds, setCurrentSeconds] = useState(0);\n    function onChange() {\n        const remainingTimer = ({\n            seconds,\n        }) => {\n            setCurrentSeconds(seconds);\n        };\n        eventEmitter.on('audiocurrentduration', remainingTimer);\n        return function cleanup() {\n            eventEmitter.removeListener('audiocurrentduration', remainingTimer)\n        }\n    }\n\n    useEffect(onChange, [currentSeconds]);\n    return (<>\n        <p>{currentSeconds}</p>\n    </>)\n}\n\nfunction CurrentMinuts() {\n    const [currentMinut, setCurrentMinut] = useState(0);\n    function onChange() {\n        const remainingTimer = ({\n            minut,\n        }) => {\n            setCurrentMinut(minut);\n        };\n        eventEmitter.on('audiocurrentduration', remainingTimer);\n        return function cleanup() {\n            eventEmitter.removeListener('audiocurrentduration', remainingTimer)\n        }\n    }\n\n    useEffect(onChange, [setCurrentMinut]);\n    return (<>\n        <p>{currentMinut}</p>\n    </>)\n}\n\nexport default ProgressBarSetter;\n","import audioPlayer from './audioPlayer';\nimport eventEmitter from './eventEmitter';\n\nexport function updateState() {\n    if (audioPlayer.currentAudio) {\n        UpdateStateValues();\n        if (audioPlayer.currentAudio.playing()) {\n            requestAnimationFrame(updateState);\n        } else {\n            cancelAnimationFrame(updateState);\n        }\n    }\n}\n\nfunction UpdateStateValues() {\n    const value = audioPlayer.currentAudio.seek() * (100 / audioPlayer.currentAudio.duration());\n    eventEmitter.emit('updateprogress', value);\n\n    let minut = Math.floor(audioPlayer.currentAudio.seek() / 60) ? Math.floor(audioPlayer.currentAudio.seek() / 60) : 0;\n    let seconds = Math.floor(audioPlayer.currentAudio.seek() - (minut * 60)) ? Math.floor(audioPlayer.currentAudio.seek() - (minut * 60)) : 0\n    const currentDurartion = {\n        minut,\n        seconds,\n    };\n    eventEmitter.emit('audiocurrentduration', currentDurartion);\n\n    minut = Math.floor(audioPlayer.currentAudio.duration() / 60);\n    seconds = Math.floor(audioPlayer.currentAudio.duration() - (minut * 60))\n    const remainingDuration = {\n        minut,\n        seconds,\n    };\n    eventEmitter.emit('audioremainingduration', remainingDuration);\n}","import { connect } from \"react-redux\";\nimport audioPlayer from '../controllers/audioPlayer';\nimport { getCLickedItem, loadedFile, getCurrentAudioName } from '../redux/selector';\nimport { updateState } from '../controllers/progressBarUpdater'\n\nasync function play(audioFile) {\n    const isAudioAlreadyPresent = audioPlayer.audioObjectByIndex[audioFile.index];\n    if (audioPlayer.currentAudio) {\n        audioPlayer.currentAudio.pause();\n    }\n    if (isAudioAlreadyPresent) {\n        audioPlayer.currentAudioId = isAudioAlreadyPresent.play();\n        return;\n    }\n    try {\n        await audioPlayer.play(audioFile);\n        updateState();\n    }\n    catch (error) {\n        console.error(error);\n    }\n}\n\nfunction getAudioRealtedData(props) {\n    if (!!props.currentClickedItem && !!props.loadedFile) {\n        const index = (+props.currentClickedItem);\n        const { data: src } = props.loadedFile[index];\n        const playData = {\n            src,\n            index,\n        }\n        play(playData);\n    }\n    return (<div>{props.currentAudioName}</div>);\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        currentClickedItem: getCLickedItem(state),\n        loadedFile: loadedFile(state),\n        currentAudioName: getCurrentAudioName(state),\n    }\n}\n\nexport default connect(mapStateToProps)(getAudioRealtedData);","import AudioFilesList from './AudioFilesList';\nimport FileOpenHandler from './FileOpenHandler';\nimport PlayButton from './PlayButton';\nimport PreviousAndNextButton from './PreviousAndNextButton';\nimport Volume from './Volume'\nimport ProgressBar from './ProgressBar'\nimport PlayingAudio from './PlayingAudio'\n\n\nconst components = {\n    AudioFilesList,\n    FileOpenHandler,\n    PlayButton,\n    PreviousAndNextButton,\n    Volume,\n    ProgressBar,\n    PlayingAudio\n}\n\nexport default components;","import _ from 'lodash'\n\nconst data = require('../config.json');\n\nclass AssetLoader {\n    constructor() {\n        this.loadedAssets = [];\n        this.fileData = [];\n        this.loadedFiles = [];\n    }\n\n    consverToBlobData(fileData) {\n        return new Promise((resolve, reject) => {\n            const fileReader = new FileReader();\n            fileReader.addEventListener('load', () => {\n                const fileReadData = fileReader.result;\n                resolve(fileReadData);\n            });\n            fileReader.addEventListener('error', () => {\n                reject(`Something error in file loading :: STATE: ${fileReader.readyState}`);\n            });\n            fileReader.readAsDataURL(fileData);\n        })\n    }\n\n    async loading(name, index, result) {\n        const blobData = await result.blob();\n        const urlResult = await this.consverToBlobData(blobData)\n\n        this.fileData.push({\n            fileName: name,\n            data: urlResult\n        });\n    }\n\n    async loadAsset(callback = _.noop) {\n        const allFetchPromis = [];\n\n        _.forEach(data, album => {\n            album.forEach(({ url, name, index }) => {\n                console.log(' Loading file ');\n                const bindedFunction = this.loading.bind(this, name, index);\n                allFetchPromis.push(\n                    fetch(url, {\n                        cache: 'force-cache',\n                    }).then(bindedFunction));\n            })\n        });\n        try {\n            await Promise.all(allFetchPromis);\n            console.log('FETCHED ALL ASSETS');\n            callback();\n        } catch (error) {\n            console.error('Got this error:::SORRY ', error)\n        }\n    }\n}\n\nconst assetLoader = new AssetLoader();\nexport default assetLoader;","import { connect } from 'react-redux';\nimport './App.css';\nimport components from './components/index'\nimport filePreloader from './controllers/filePreloader'\nimport { addFiles, loadFiles } from './redux/actions';\n\nconst { PlayButton, PreviousAndNextButton,\n  FileOpenHandler, AudioFilesList, Volume, ProgressBar, PlayingAudio } = components\n\nfunction App(props) {\n  filePreloader.loadAsset(()=>{\n    props.addFiles(filePreloader.fileData);\n  });\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AudioFilesList />\n        <FileOpenHandler />\n        <ProgressBar value='0' />\n        <Volume />\n        <div className=\"Audio-Controller\">\n          <PreviousAndNextButton type='previous' />\n          <PlayButton />\n          <PreviousAndNextButton type='next' />\n        </div>\n        <PlayingAudio />\n      </header>\n    </div>\n  );\n}\n\n\nexport default connect(null, { addFiles, loadFiles })(App);\n","import { ADD_FILES, DELETE_FILES } from '../actionTypes';\n\nconst initialState = {\n    files: [],\n    isFilesLoaded: false,\n}\n\nexport default function fileHandler(state = initialState, { type, payload }) {\n    switch (type) {\n        case ADD_FILES:\n            return {\n                ...state,\n                files: [\n                    ...state.files,\n                    ...payload.files\n                ]\n            }\n        case DELETE_FILES:\n            return {\n                ...state,\n                files: null,\n            }\n        default:\n            return state;\n    }\n}","import { CLICKED, LOADED_FILES, CLICKED_AUDIO_NAME } from '../actionTypes';\n\nconst initialState = {\n    currectClicked: '',\n    loadedFile: null,\n    clickedAudioName: 'click on list',\n}\n\nexport default function currectClicked(state = initialState, { type, payload }) {\n    switch (type) {\n        case CLICKED:\n            return {\n                ...state,\n                currectClicked: payload\n            }\n        case LOADED_FILES:\n            return {\n                ...state,\n                loadedFile: payload\n            }\n        case CLICKED_AUDIO_NAME:\n            return {\n                ...state,\n                clickedAudioName: payload\n            }\n        default:\n            return state;\n    }\n}","import { PLAY_PAUSE_BUTTON } from '../actionTypes'\n\nconst initialState = {\n    toggle: false,\n}\n\nexport default function togglePlayPauseButton(state = initialState, { type, payload }) {\n    switch (type) {\n        case PLAY_PAUSE_BUTTON:\n            return {\n                ...state,\n                toggle: payload\n            }\n        default:\n            return state;\n    }\n}","import { AUDIO_PROGRESS, CURRENT_DURATION, REMAINING_DURATION } from '../actionTypes';\n\nconst initialState = {\n    value: 0,\n    currentDurartion: {\n        minut: 0,\n        seconds: 0\n    },\n    remainingDuration: {\n        minut: 0,\n        seconds: 0\n    }\n}\n\nexport default function fileHandler(state = initialState, { type, value, currentDurartion, remainingDuration }) {\n    switch (type) {\n        case AUDIO_PROGRESS:\n            return {\n                ...state,\n                value\n            }\n        case CURRENT_DURATION:\n            return {\n                ...state,\n                currentDurartion\n            }\n        case REMAINING_DURATION:\n            return {\n                ...state,\n                remainingDuration\n            }\n        default:\n            return state;\n    }\n}","import { AUIDO_VOLUME } from '../actionTypes';\n\nconst initalState = {\n    volume: 50,\n}\n\nexport default function audioVolume(state = initalState, { type, volume }) {\n    switch (type) {\n        case AUIDO_VOLUME:\n            return {\n                ...state,\n                volume,\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport fileInput from './fileInput';\nimport audioList from './audioList';\nimport togglePlayPauseButton from './audioButtons'\nimport audioProgress from './audioProgress'\nimport audioVolume from './audioVolume'\n\nexport default combineReducers({\n    fileInput,\n    audioList,\n    audioButton: togglePlayPauseButton,\n    audioProgress,\n    audioVolume\n});","import { createStore } from 'redux'\nimport rootReducer from './reducers';\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}