{"version":3,"sources":["redux/selector.js","redux/actionTypes.js","redux/actions.js","controllers/audioPlayer.js","controllers/progressBarUpdater.js","controllers/playAudio.js","components/AudioFilesList.js","svgButtonDesign/folder-open.svg","controllers/fileInputeLoader.js","controllers/filePreloader.js","components/FileOpenHandler.js","svgButtonDesign/playButton.svg","svgButtonDesign/pauseButton.svg","components/PlayButton.js","svgButtonDesign/previousButton.svg","components/ProgressBar.js","components/index.js","components/PreviousAndNextButton.js","components/Volume.js","App.js","redux/reducers/fileInput.js","redux/reducers/audioList.js","redux/reducers/audioButtons.js","redux/reducers/audioProgress.js","redux/reducers/audioVolume.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["getCLickedItem","store","audioList","currectClicked","getLoadedFiles","loadedFile","getVolume","audioVolume","volume","ADD_FILES","DELETE_FILES","CLICKED","LOADED_FILES","PLAY_PAUSE_BUTTON","AUDIO_PROGRESS","CURRENT_DURATION","REMAINING_DURATION","AUIDO_VOLUME","playPauseButton","payload","console","log","type","audioPlayer","this","hawlerInstance","audioPlayId","audioObjectByIndex","currentAudioId","fileData","onAudioStart","Promise","resolve","reject","sound","Howl","src","format","onloaderror","error","onplayerror","onplay","info","onend","onmute","id","once","play","index","onAudioEnd","stop","pause","window","copyCallback","updateState","callBackObject","isNaN","currentAudio","audioProgress","audioCurrentDurationUpdate","audioRemainingDurationUpdate","value","seek","duration","minut","Math","floor","seconds","updateStateValues","playing","requestAnimationFrame","cancelAnimationFrame","audioFile","onStartCallbacks","a","isAudioAlreadyPresent","onStartCallBacks","connect","state","currentClickedItem","currentDurartion","remainingDuration","props","list","fileName","onListClick","updateClickedAudioItem","getFileList","files","map","bindedCallback","bind","className","onClick","fileInput","content","data","dataList","fileNamesData","loadThisFile","fileReader","FileReader","addEventListener","fileReadData","result","push","name","readyState","readAsDataURL","inputTarget","promiseArr","i","length","file","item","all","loadedFiles","loadFile","require","assetLoader","loadedAssets","blob","blobData","loadedData","callback","_","noop","allFetchPromis","forEach","album","url","bindedFunction","loading","fetch","cache","then","FileOpenHandler","fileDialogueRef","React","createRef","onButtonClickHandler","onButtonClick","getSelectedFilesBinded","getSelectedFiles","filesAdded","assetLoad","current","click","target","fileLoader","addFiles","loadFiles","ref","style","display","folderOpenIcon","onChange","event","currentTarget","multiple","accept","Component","PlayButton","handleButtonClick","clickedOnButton","toggle","button","playButton","alt","pauseButton","audioButton","RemainingSeconds","RemainingMinuts","CurrentSeconds","CurrentMinuts","components","AudioFilesList","PreviousAndNextButton","previousButton","transform","Volume","audioVolumeUpdate","min","max","ProgressBar","App","initialState","isFilesLoaded","initalState","combineReducers","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.911a5805.chunk.js","sourcesContent":["export const loadedFile = store => store.fileInput.files;\n\nexport const getCLickedItem = store => store.audioList.currectClicked;\n\nexport const getLoadedFiles = store => store.audioList.loadedFile;\n\nexport const getVolume = store => store.audioVolume.volume;","export const ADD_FILES = 'ADD_FILES';\nexport const DELETE_FILES = 'DELETE_FILES';\nexport const UPDATE_CURRENT_AUDIO = 'UPDATE_CURRENT_AUDIO';\nexport const CLICKED = 'CLICKED';\nexport const LOADED_FILES = 'LOADED_FILES';\nexport const PLAY_PAUSE_BUTTON = 'PLAY_PAUSE_BUTTON';\nexport const AUDIO_PROGRESS = 'AUDIO_PROGRESS';\nexport const CURRENT_DURATION = 'CURRENT_DURATION';\nexport const REMAINING_DURATION = 'REMAINING_DURATION';\nexport const AUIDO_VOLUME = 'AUIDO_VOLUME';\n","import {\n    ADD_FILES, DELETE_FILES, CLICKED, LOADED_FILES, PLAY_PAUSE_BUTTON, AUDIO_PROGRESS, CURRENT_DURATION,\n    REMAINING_DURATION, AUIDO_VOLUME\n} from './actionTypes';\n\nexport function addFiles(content) {\n    console.log(content);\n    return {\n        type: ADD_FILES,\n        payload: {\n            files: content\n        }\n    }\n}\n\nexport function deleteFiles(content) {\n    return {\n        type: DELETE_FILES,\n        payload: content\n    }\n}\n\nexport function updateClickedAudioItem(content) {\n    console.log(content);\n    return {\n        type: CLICKED,\n        payload: content\n    }\n}\n\nexport function loadFiles(content) {\n    return {\n        type: LOADED_FILES,\n        payload: content\n    }\n}\n\nexport function playPauseButton(payload) {\n    console.log('payload  payloadpayload', payload);\n    return {\n        type: PLAY_PAUSE_BUTTON,\n        payload,\n    }\n}\n\nexport function audioProgress(value) {\n    return {\n        type: AUDIO_PROGRESS,\n        value,\n    }\n}\n\nexport function audioCurrentDurationUpdate(currentDurartion) {\n    return {\n        type: CURRENT_DURATION,\n        currentDurartion,\n    }\n}\n\nexport function audioRemainingDurationUpdate(remainingDuration) {\n    return {\n        type: REMAINING_DURATION,\n        remainingDuration,\n    }\n}\n\nexport function audioVolumeUpdate(volume) {\n    console.log(volume);\n    return {\n        type: AUIDO_VOLUME,\n        volume,\n    }\n}","import { Howl } from 'howler';\n\nclass AudioPlayer {\n  constructor() {\n    this.hawlerInstance = [];\n    this.audioPlayId = {};\n    this.audioObjectByIndex = {};\n    this.currentAudioId = null;\n  }\n\n  play(fileData, onAudioStart) {\n    console.log('In play method');\n    return new Promise((resolve, reject) => {\n      const sound = new Howl({\n        src: fileData.src,\n        format: 'mp4',\n        onloaderror: () => {\n          console.error('Audio file is not loaded');\n          reject();\n        },\n        onplayerror: () => {\n          console.error('On play error');\n          reject();\n        },\n        onplay: () => {\n          console.info('Audio started playing');\n        },\n        onend: () => {\n          console.info('Audio playing completed');\n        },\n        onmute: () => {\n          console.info('Muted');\n        }\n      });\n      let id = null;\n      sound.once('load', () => {\n        id = sound.play();\n        this.currentAudioId = id;\n        this.audioObjectByIndex[fileData.index] = sound;\n        this.audioPlayId[id] = sound;\n        console.log('in load ID', id);\n        onAudioStart();\n        resolve(id);\n      });\n      sound.once('end', () => { this.onAudioEnd(id) });\n\n    })\n  }\n\n  // Once completed no need a object ref\n  onAudioEnd(id) {\n    console.log('Audio ended');\n    // delete this.audioPlayId[id];\n  }\n\n  // should send id to stop needed audio\n  stop(id) {\n    this.audioPlayId[id].stop(id);\n  }\n\n  stopAll() {\n    // Need to work on it.\n  }\n\n  pause(id) {\n    this.audioPlayId[id].pause();\n  }\n\n  resume(id) {\n    this.audioPlayId[id].play();\n  }\n\n  get currentAudio() {\n    return this.audioPlayId[this.currentAudioId];\n  }\n}\n\nconst audioPlayer = new AudioPlayer();\nexport default audioPlayer;\nwindow.audioPlayer = audioPlayer;\n","import audioPlayer from './audioPlayer';\nlet copyCallback = null;\n\nexport function updateState(callBackObject) {\n    if (isNaN(+callBackObject)) {\n        copyCallback = callBackObject;\n    }\n    if (audioPlayer.currentAudio) {\n\n        const param = copyCallback ? copyCallback : callBackObject;\n        updateStateValues(param);\n        if (audioPlayer.currentAudio.playing()) {\n            requestAnimationFrame(updateState);\n        } else {\n            cancelAnimationFrame(updateState);\n        }\n    }\n}\n\nfunction updateStateValues({ audioProgress, audioCurrentDurationUpdate, audioRemainingDurationUpdate }) {\n    const value = audioPlayer.currentAudio.seek() * (100 / audioPlayer.currentAudio.duration());\n    audioProgress(value);\n\n    let minut = Math.floor(audioPlayer.currentAudio.seek() / 60) ? Math.floor(audioPlayer.currentAudio.seek() / 60) : 0;\n    let seconds = Math.floor(audioPlayer.currentAudio.seek() - (minut * 60)) ? Math.floor(audioPlayer.currentAudio.seek() - (minut * 60)) : 0\n    const currentDurartion = {\n        minut,\n        seconds,\n    };\n    audioCurrentDurationUpdate(currentDurartion)\n\n    minut = Math.floor(audioPlayer.currentAudio.duration() / 60);\n    seconds = Math.floor(audioPlayer.currentAudio.duration() - (minut * 60))\n    const remainingDuration = {\n        minut,\n        seconds,\n    };\n    audioRemainingDurationUpdate(remainingDuration)\n}","import { connect } from \"react-redux\";\nimport audioPlayer from './audioPlayer';\nimport { getCLickedItem, getLoadedFiles } from '../redux/selector';\nimport { audioProgress, audioCurrentDurationUpdate, audioRemainingDurationUpdate } from '../redux/actions';\nimport { updateState } from '../controllers/progressBarUpdater'\n\nasync function play(audioFile, onStartCallbacks) {\n    console.log('In play method');\n    const isAudioAlreadyPresent = audioPlayer.audioObjectByIndex[audioFile.index];\n    if (audioPlayer.currentAudio) {\n        audioPlayer.currentAudio.pause();\n    }\n    if (isAudioAlreadyPresent) {\n        audioPlayer.currentAudioId = isAudioAlreadyPresent.play();\n        audioPlayer.currentAudio.onStartCallBacks();\n        return;\n    }\n    try{\n        const onStartCallBacks = () => {\n            updateState(onStartCallbacks);\n        };\n        await audioPlayer.play(audioFile, onStartCallBacks);\n        audioPlayer.currentAudio.onStartCallBacks = onStartCallBacks;\n    }\n    catch(error){\n        console.log(error);\n    }\n}\n\nfunction getAudioRealtedData(props) {\n    console.log(props);\n    if (props.currentClickedItem && !!props.getLoadedFiles) {\n        const index = props.currentClickedItem - 1;\n        const src = props.getLoadedFiles[index];\n        const playData = {\n            src,\n            index,\n        }\n        play(playData, {\n            audioProgress: props.audioProgress,\n            audioCurrentDurationUpdate: props.audioCurrentDurationUpdate,\n            audioRemainingDurationUpdate: props.audioRemainingDurationUpdate\n        });\n    }\n    return (<></>);\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        currentClickedItem: getCLickedItem(state),\n        getLoadedFiles: getLoadedFiles(state),\n    }\n\n}\n\nexport default connect(mapStateToProps, {\n    audioProgress,\n    audioCurrentDurationUpdate,\n    audioRemainingDurationUpdate\n})(getAudioRealtedData);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { loadedFile } from '../redux/selector';\nimport { updateClickedAudioItem, playPauseButton } from '../redux/actions'\nimport AudioUpdater from '../controllers/playAudio'\nimport './style.css'\n\nconst list = [\n  { fileName: 'first audio', index: 1 },\n  { fileName: 'first audio', index: 2 },\n  { fileName: 'first audio', index: 3 },\n  { fileName: 'first audio', index: 4 },\n  { fileName: 'first audio', index: 5 },\n  { fileName: 'first audio', index: 6 },\n]\n\nfunction onListClick(index) {\n  console.log(this);\n  this.updateClickedAudioItem(index + 1);\n  this.playPauseButton(true);\n}\n\nfunction getFileList({ props, files }) {\n  console.log(files, props);\n  return files.map(({ fileName, index }) => {\n    console.log(this);\n    const bindedCallback = onListClick.bind(props, index);\n    return (\n      <li className='List' key={index} onClick={bindedCallback}>\n        {fileName}\n      </li>\n    );\n  })\n}\n\nfunction audioNameList(props) {\n  const data = {\n    props,\n    files: props.files\n  };\n  const dataList = {\n    props,\n    files: list\n  }\n  return (\n    <div className='myBox'>\n      <AudioUpdater />\n      <ol>\n        {getFileList(props.files ? data : dataList)}\n      </ol>\n    </div>\n  );\n}\n\nconst mapStateToProps = function (state) {\n  const files = loadedFile(state);\n  return { files };\n}\n\nexport default connect(mapStateToProps, { updateClickedAudioItem, playPauseButton })(audioNameList);","export default __webpack_public_path__ + \"static/media/folder-open.610cbfaa.svg\";","let fileNamesData = [];\nfunction loadThisFile(fileData, index) {\n    return new Promise((resolve, reject) => {\n        const fileReader = new FileReader();\n        fileReader.addEventListener('load', () => {\n            const fileReadData = fileReader.result;\n            fileNamesData.push({\n                fileName: fileData.name,\n                index,\n            })\n            resolve(fileReadData);\n        });\n        fileReader.addEventListener('error', () => {\n            reject(`Something error in file loading :: STATE: ${fileReader.readyState}`);\n        });\n        fileReader.readAsDataURL(fileData);\n    });\n}\n\nasync function loadFile(inputTarget) {\n    let promiseArr = [];\n    for (let i = 0; i < inputTarget.files.length; i++) {\n        const file = inputTarget.files.item(i);\n        promiseArr.push(loadThisFile(file, i));\n    }\n    const loadedFiles = await Promise.all(promiseArr);\n    window.loadedFiles = loadedFiles;\n    return { loadedFiles, fileData: fileNamesData };\n}\n\nexport default loadFile;","import _ from 'lodash'\nconst data = require('../config.json');\n\nclass AssetLoader {\n    constructor() {\n        this.loadedAssets = [];\n        window.loadedAssets = this.loadedAssets;\n        window.data = data;\n    }\n\n    async loading(name,result){\n        const blobData = await result.blob();\n        const loadedData = {\n            name,\n            data:blobData\n        }\n        this.loadedAssets.push(loadedData);\n        console.log('aaa')\n    }\n\n    async loadAsset(callback = _.noop) {\n        const allFetchPromis = [];\n\n        _.forEach(data,album => {\n            album.forEach(({ url, name }) => {\n                const bindedFunction = this.loading.bind(this,name);\n                allFetchPromis.push(\n                    fetch(url, {\n                        cache: 'force-cache',\n                    }).then(bindedFunction));\n            })\n        });\n        try{\n            await Promise.all(allFetchPromis);\n            console.log('FETCHED ALL ASSETS');\n            callback();\n        }catch(error){\n            console.error('Got this error:::SORRY ',error)\n        }\n    }\n}\n\nconst assetLoader = new AssetLoader();\nexport default assetLoader;","import React from 'react';\nimport { connect } from 'react-redux'\n// import { audioPlayer } from '../controllers/audioPlayer'\nimport folderOpenIcon from '../svgButtonDesign/folder-open.svg'\nimport { addFiles, loadFiles } from '../redux/actions';\nimport fileLoader from '../controllers/fileInputeLoader'\nimport assetLoad from '../controllers/filePreloader'\nimport './style.css'\n\nclass FileOpenHandler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileDialogueRef = React.createRef();\n    this.onButtonClickHandler = this.onButtonClick.bind(this);\n    this.getSelectedFilesBinded = this.getSelectedFiles.bind(this);\n    this.state = {\n      filesAdded: true,\n      files: null,\n    }\n    window.assetLoad = assetLoad;\n  }\n\n  componentDidMount() {\n    // fetch(\"/Media/Album/2020%20Grammy%20Nominees/Various%20Artists%20-%202020%20Grammy%20Nominees%20%282020%29/\")\n    //   .then(response => response.text())\n    //   .then(result => console.log(result))\n    //   .catch(error => console.log('error', error));\n    // fetch('/search?q=javascript')\n    // .then(resp => {\n    //   console.log('======success=======');\n    //   resp.blob().then(re => {\n    //     var FR = new FileReader();\n    //     FR.onload = event => {\n    //       console.log(FR.result);\n    //     };\n    //     FR.readAsText(re);\n    //   });\n    // })\n    // .catch(err => {\n    //   console.log('======failure=======');\n    //   console.log(err);\n    // });\n  }\n\n  onButtonClick() {\n    this.fileDialogueRef.current.click();\n  }\n\n  async getSelectedFiles({ target }) {\n    const { fileData, loadedFiles } = await fileLoader(target);\n    this.props.addFiles(fileData);\n    this.props.loadFiles(loadedFiles);\n\n    console.log('fileLoader component', fileData);\n  }\n\n  render() {\n    return (\n      <div>\n        <input\n          type='file'\n          ref={this.fileDialogueRef}\n          style={{ display: \"none\" }}\n          src={folderOpenIcon}\n          onChange={this.getSelectedFilesBinded}\n          onClick={(event) => {\n            event.currentTarget.value = null\n          }}\n          multiple accept='audio/*' />\n        <button className='fileButton' onClick={this.onButtonClickHandler}>Open File</button>\n      </div>\n    )\n  }\n}\n\nexport default connect(null, { addFiles, loadFiles })(FileOpenHandler);\n","export default __webpack_public_path__ + \"static/media/playButton.c49abbd7.svg\";","export default __webpack_public_path__ + \"static/media/pauseButton.cadf7947.svg\";","import React from 'react';\nimport playButton from '../svgButtonDesign/playButton.svg'\nimport pauseButton from '../svgButtonDesign/pauseButton.svg'\nimport audioPlayer from '../controllers/audioPlayer';\nimport { connect } from 'react-redux'\nimport { playPauseButton } from '../redux/actions'\n\n\nclass PlayButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtonClick = this.clickedOnButton.bind(this);\n  }\n\n  clickedOnButton() {\n    this.props.playPauseButton(!this.props.toggle)\n    if (this.props.toggle) {\n      audioPlayer.currentAudio.pause();\n    } else {\n      audioPlayer.currentAudio.play();\n      audioPlayer.currentAudio.onStartCallBacks && audioPlayer.currentAudio.onStartCallBacks();\n\n    }\n  }\n\n  render() {\n    let button = <img src={playButton} alt='pause-button' />;\n    if (this.props.toggle) {\n      button = <img src={pauseButton} alt='play-button' />;\n    }\n    return (\n      <div className='Interaction-button' onClick={this.handleButtonClick} >\n        { button}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    toggle: state.audioButton.toggle,\n  }\n}\n\nexport default connect(mapStateToProps, { playPauseButton })(PlayButton);\n","export default __webpack_public_path__ + \"static/media/previousButton.73c027af.svg\";","import React from 'react';\nimport './style.css'\nimport { connect } from 'react-redux'\n\nfunction ProgressBarSetter(props) {\n    return (\n        <>\n            <div className='Progress'>\n                <div className='progressTimer'> <RemainingMinuts minut={props.remainingDuration.minut} /> <p>:</p> <RemainingSeconds seconds={props.remainingDuration.seconds}/></div>\n                <progress type=\"range\" min=\"1.5\" max=\"100\" value={props.value} />\n                <div className='progressTimer'> <CurrentMinuts minut={props.currentDurartion.minut} /> <p>:</p> <CurrentSeconds seconds={props.currentDurartion.seconds}/></div>\n            </div >\n        </>\n    );\n}\n\nfunction RemainingSeconds(props) {\n    return (<>\n        <p>{props.seconds}</p>\n    </>)\n\n}\n\nfunction RemainingMinuts(props) {\n    return (<>\n        <p>{props.minut}</p>\n    </>)\n}\n\nfunction CurrentSeconds(props) {\n    return (<>\n        <p>{props.seconds}</p>\n    </>)\n}\n\nfunction CurrentMinuts(props) {\n    return (<>\n        <p>{props.minut}</p>\n    </>)\n}\n\nfunction mapPropsToState(state) {\n    return {\n        value: state.audioProgress.value,\n        currentDurartion: state.audioProgress.currentDurartion,\n        remainingDuration: state.audioProgress.remainingDuration,\n    }\n}\n\nexport default connect(mapPropsToState)(ProgressBarSetter);\n\n","import AudioFilesList from './AudioFilesList';\nimport FileOpenHandler from './FileOpenHandler';\nimport PlayButton from './PlayButton';\nimport PreviousAndNextButton from './PreviousAndNextButton';\nimport Volume from './Volume'\n\nimport ProgressBar from './ProgressBar'\n\nconst components = {\n    AudioFilesList,\n    FileOpenHandler,\n    PlayButton,\n    PreviousAndNextButton,\n    Volume,\n    ProgressBar\n}\n\nexport default components;","import React from 'react';\nimport previousButton from '../svgButtonDesign/previousButton.svg'\n\nclass PreviousAndNextButton extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      toggle:true,\n    }\n    this.handleButtonClick = this.clickedOnButton.bind(this);\n  }\n\n  clickedOnButton(){\n    console.log('Clicked',this.props);\n  }\n\n  render(){\n    let button = <img src={previousButton} alt='pause-button' />;\n    if(this.props.type === \"next\"){\n      button = <img src={previousButton} alt='next-button' style={{transform: 'scaleX(-1)'}} />;\n    }\n    return (\n      <div className='Interaction-button' onClick={this.handleButtonClick} >\n        {button}\n      </div>\n    )\n  }\n}\n\nexport default PreviousAndNextButton;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport audioPlayer from '../controllers/audioPlayer';\nimport './style.css'\nimport { getVolume  } from '../redux/selector';\nimport { audioVolumeUpdate  } from '../redux/actions';\n\n function Volume(props) {\n    function onChange({ target }) {\n        const volume = target.value / 100;\n        props.audioVolumeUpdate(target.value);\n        audioPlayer.currentAudio && audioPlayer.currentAudio.playing() && audioPlayer.currentAudio.volume(volume);\n    }\n    return (\n        <div className='Volume'>\n            <input type=\"range\" min=\"1\" max=\"100\" value={props.volume} onChange={onChange} />\n            <p>{props.volume}</p>\n        </div >\n    )\n}\n\nconst mapStateToProps = function(state){\n    return {\n        volume: getVolume(state),\n    }\n}\n\nexport default connect(mapStateToProps,{ audioVolumeUpdate })(Volume);","import './App.css';\n\nimport components from './components/index'\n\nconst { PlayButton, PreviousAndNextButton,\n  FileOpenHandler, AudioFilesList, Volume, ProgressBar } = components\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <AudioFilesList />\n        <FileOpenHandler />\n        <ProgressBar value='0' />\n        <Volume />\n        <div className=\"Audio-Controller\">\n          <PreviousAndNextButton type='previous' />\n          <PlayButton />\n          <PreviousAndNextButton type='next' />\n        </div>\n      </header>\n    </div>\n  );\n}\n\n\nexport default App;\n","import { ADD_FILES, DELETE_FILES } from '../actionTypes';\n\nconst initialState = {\n    files: null,\n    isFilesLoaded: false,\n}\n\nexport default function fileHandler(state = initialState, { type, payload }) {\n    switch (type) {\n        case ADD_FILES:\n            return {\n                ...state,\n                files: payload.files\n            }\n        case DELETE_FILES:\n            return {\n                ...state,\n                files: null,\n            }\n        default:\n            return state;\n    }\n}","import { CLICKED, LOADED_FILES } from '../actionTypes';\n\nconst initialState = {\n    currectClicked: null,\n    loadedFile: null,\n}\n\nexport default function currectClicked(state = initialState, { type, payload }) {\n    switch (type) {\n        case CLICKED:\n            return {\n                ...state,\n                currectClicked: payload\n            }\n        case LOADED_FILES:\n            return {\n                ...state,\n                loadedFile: payload\n            }\n        default:\n            return state;\n    }\n}","import { PLAY_PAUSE_BUTTON } from '../actionTypes'\n\nconst initialState = {\n    toggle: false,\n}\n\nexport default function togglePlayPauseButton(state = initialState, { type, payload }) {\n    switch (type) {\n        case PLAY_PAUSE_BUTTON:\n            return {\n                ...state,\n                toggle: payload\n            }\n        default:\n            return state;\n    }\n}","import { AUDIO_PROGRESS, CURRENT_DURATION, REMAINING_DURATION } from '../actionTypes';\n\nconst initialState = {\n    value: 0,\n    currentDurartion: {\n        minut: 0,\n        seconds: 0\n    },\n    remainingDuration: {\n        minut: 0,\n        seconds: 0\n    }\n}\n\nexport default function fileHandler(state = initialState, { type, value, currentDurartion, remainingDuration }) {\n    switch (type) {\n        case AUDIO_PROGRESS:\n            return {\n                ...state,\n                value\n            }\n        case CURRENT_DURATION:\n            return {\n                ...state,\n                currentDurartion\n            }\n        case REMAINING_DURATION:\n            return {\n                ...state,\n                remainingDuration\n            }\n        default:\n            return state;\n    }\n}","import { AUIDO_VOLUME } from '../actionTypes';\n\nconst initalState = {\n    volume: 50,\n}\n\nexport default function audioVolume(state = initalState, { type, volume }) {\n    switch (type) {\n        case AUIDO_VOLUME:\n            return {\n                ...state,\n                volume,\n            }\n        default:\n            return state;\n    }\n\n}","import { combineReducers } from \"redux\";\nimport fileInput from './fileInput';\nimport audioList from './audioList';\nimport togglePlayPauseButton from './audioButtons'\nimport audioProgress from './audioProgress'\nimport audioVolume from './audioVolume'\n\nexport default combineReducers({\n    fileInput,\n    audioList,\n    audioButton: togglePlayPauseButton,\n    audioProgress,\n    audioVolume\n});","import { createStore } from 'redux'\nimport rootReducer from './reducers';\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}